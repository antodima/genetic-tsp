#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{hyperref}
\usepackage{listings}
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage[titletoc,title]{appendix}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Travelling Salesman Problem with Genetic Algorithms
\begin_inset Newline newline
\end_inset


\size large
Project Report of Parallel and Distributed Systems: Paradigms and Models
 Course
\begin_inset Newline newline
\end_inset

University of Pisa
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\size default

\begin_inset Graphics
	filename imgs/unipi-logo.png
	scale 50

\end_inset


\end_layout

\begin_layout Author
Antonio Di Mauro
\begin_inset Newline newline
\end_inset

599785
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Travelling Salesman Problem (TSP) is a problem of finding the shortest path,
 visiting once the cities/nodes in the graph, from starting city to destination
 city.
 
\end_layout

\begin_layout Standard
The Genetic Algorithm (GA) is used as heuristic that mimics genetic evolution
 of species.
 At the beginning there is a population of chromosomes and at each generation
 the new population is made by crossover and mutation procedures.
 Crossover takes two parents and made up a new chromosome/children.
 Mutation swap randomly two 
\begin_inset Quotes eld
\end_inset

genes
\begin_inset Quotes erd
\end_inset

 of a chromosome.
 The individuals that survives to the next generation is decided by a fitness
 function that select the best ones.
\end_layout

\begin_layout Standard
In the TSP setting a chromosome is a list of cities (identified by an unique
 integer) that represents a path from a start city to a destination city.
\end_layout

\begin_layout Section
Workflow analysis
\end_layout

\begin_layout Standard
The problem of TSP with GA could be represented by the pseudocode in Algorithm
 1.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pseudocode of TSP with GA
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
create 
\series default
population
\end_layout

\begin_layout Plain Layout

\series bold
foreach
\series default
 generation:
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace{0.5cm}
\end_layout

\end_inset


\series bold
breeding
\series default
 population
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace{0.5cm}
\end_layout

\end_inset


\series bold
ranking
\series default
 population
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At each generation the population size has keeped constant.
 The breeding operation computes crossover and mutation and the ranking
 operation sorts the population by fitness.
\end_layout

\begin_layout Standard
In Table 1 are collected the service times of the single operations obtained
 running the sequential implementation of the algorithm.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Operation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Service Time (Î¼sec)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Creation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Breeding
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
86
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ranking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1628
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Service times of the operations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In a graphical way the workflow of the algorithm, with serial and non serial
 operations, is represented as in Figure 1.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/workflow.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
WorkFlow of the Algorithm (the squared shape represents serial operation
 and the rounded shape represents the non serial operation)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the parallel view of the algorithm we could leave out the Creation operation
 because done just once time at the beginning and focus on the other two.
\end_layout

\begin_layout Standard
In a 
\bar under
first approach
\bar default
 we could think that it's not convenient to parallelize the Breeding operation,
 because the Ranking operation takes much more time (18 times the Breeding
 operation) than the one said before.
 So we could think to parallelize only the Ranking operation, with an optimal
 degree of parallelism of 18.
\end_layout

\begin_layout Standard
The thought said before is represented using the Master-Worker template
 of Figure 2.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/master_worker_1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Master-Worker template with Breeder as Emitter and Ranker as Worker
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
the Breeder receives the initial population and then computes the breeding
 operation.
 After the population is divided in nw (number of workers) sub-populations,
 these are passed to each Ranker node that computes the ranking operation
 and returns the sub-population to the Breeder.
 Finally, the Breeder computes the breeding operation on the top-k (where
 k is the size of initial population) of the population and discard the
 rest.
\end_layout

\begin_layout Standard
The breeding and ranking operations are repeated n times, where n is the
 number of generations.
\end_layout

\begin_layout Standard
The 
\bar under
second approach
\bar default
 uses RPLSH with optimization/refactoring rules.
 The result is that the breeding and the ranking operations are combined
 in a single node in a configuration with the minimum service time and resources
 used.
\end_layout

\begin_layout Standard
The RPLSH analysis is in Listing 1.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize},caption={RPLSH analysis}"
inline false
status open

\begin_layout Plain Layout

rplsh> breed = seq(86)
\end_layout

\begin_layout Plain Layout

rplsh> rank = seq(1628)
\end_layout

\begin_layout Plain Layout

rplsh> main = pipe(breed,rank)
\end_layout

\begin_layout Plain Layout

rplsh> rewrite main with allrules, allrules
\end_layout

\begin_layout Plain Layout

rplsh> optimize main with farmopt, pipeopt, maxresources
\end_layout

\begin_layout Plain Layout

rplsh> show main by servicetime, resources +5
\end_layout

\begin_layout Plain Layout

122.428571	16	 [4] : farm(comp(breed,rank)) with [ nw: 14]
\end_layout

\begin_layout Plain Layout

122.428571	16	[16] : comp(farm(breed) with [ nw: 14],farm(rank) with [ nw:
 14])
\end_layout

\begin_layout Plain Layout

125.230769	16	 [5] : pipe(breed,farm(rank) with [ nw: 13])
\end_layout

\begin_layout Plain Layout

148.000000	16	 [1] : pipe(breed,farm(farm(rank) with [ nw: 11]) with [ nw:
 1])
\end_layout

\begin_layout Plain Layout

148.000000	16	 [9] : pipe(farm(breed) with [ nw: 1],farm(rank) with [ nw:
 11])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The definitive Workflow is shown in Figure 3.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imgs/master_worker_2.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Final Workflow with a Master node that divides and collects the tasks, and
 Worker nodes that computes breeding and ranking operations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The final workflow is used in the 
\bar under
C++ Threads
\bar default
 and 
\bar under
FastFlow
\bar default
 implementations.
\end_layout

\begin_layout Section
Speedup analysis
\end_layout

\begin_layout Standard
The serial fraction represents the fraction of time spent to executes the
 Creation operation and n times the Breeding operation (the squared shapes
 in Figure 1).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f=\frac{t_{serial}}{t_{serial}\,+\,t_{non\,serial}}=\frac{t_{creation}\,+\,(n\,\bullet\,t_{breeding})}{[t_{creation}\,+\,(n\,\bullet\,t_{breeding})]\,+\,(n\,\bullet\,t_{ranking})}=\frac{46\,+\,(n\,\bullet\,86)}{[46\,+\,(n\,\bullet\,86)]\,+\,(n\,\bullet\,1628)}
\]

\end_inset


\end_layout

\end_body
\end_document
